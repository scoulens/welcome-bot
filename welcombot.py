import telebot
import logging

logging.basicConfig(level=logging.INFO)

BOT_TOKEN = ""  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(BOT_TOKEN)

WELCOME_USERS_FILE = "welcome_users.txt"


def load_welcome_users():
    try:
        with open(WELCOME_USERS_FILE, "r") as f:
            return set(map(int, f.read().splitlines()))
    except FileNotFoundError:
        return set()


def save_welcome_users(user_ids):
    with open(WELCOME_USERS_FILE, "w") as f:
        for user_id in user_ids:
            f.write(str(user_id) + "\n")



@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    user_id = message.from_user.id
    user_ids = load_welcome_users()

    if user_id not in user_ids:
        keyboard = telebot.types.InlineKeyboardMarkup()
        url_button = telebot.types.InlineKeyboardButton(text="–ü–æ—Å–µ—Ç–∏—Ç—å @username", url="https://t.me/r0d0xxbot")
        callback_button = telebot.types.InlineKeyboardButton(text="–ü—Ä–æ–µ–∫—Ç 2", callback_data="project_2")
        keyboard.add(url_button)
        keyboard.add(callback_button)

        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! üëã –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –Ω–∞–ø–∏—Å–∞–ª–∏! –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –º–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã.",
                         reply_markup=keyboard)

        user_ids.add(user_id)
        save_welcome_users(user_ids)

    else:

        pass



@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "project_2":
        bot.send_message(call.message.chat.id, "–í—ã –Ω–∞–∂–∞–ª–∏ Project 2. –í–æ—Ç —Å—Å—ã–ª–∫–∞: [SOME_LINK]")  # –ó–∞–º–µ–Ω–∏—Ç–µ SOME_LINK –Ω–∞—Å—Ç–æ—è—â–µ–π —Å—Å—ã–ª–∫–æ–π
    else:
        bot.send_message(call.message.chat.id, f"–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É —Å callback {call.data}")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ



if __name__ == '__main__':
    bot.polling(none_stop=True)